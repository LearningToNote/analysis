SET SCHEMA DM_PAL;

--INPUT DATA
DROP TYPE PAL_SVM_TRAININGSET_T;
DROP TABLE PAL_SVM_TRAININGSET_TBL;

CREATE TYPE PAL_SVM_TRAININGSET_T AS TABLE (
  ID INTEGER,
  DDI INTEGER,
  E1_TYPE INTEGER,
  E2_TYPE INTEGER
);
CREATE COLUMN TABLE PAL_SVM_TRAININGSET_TBL AS (
  SELECT * FROM TRAIN_DATA
);


--PARAMETERS
DROP TYPE PAL_CONTROL_T;
DROP TABLE #PAL_CONTROL_TBL;

CREATE TYPE PAL_CONTROL_T AS TABLE(
  NAME varchar(50),
  INT#PAL_CONTROL_TBL integer,
  DOUBLE#PAL_CONTROL_TBL double,
  STRING#PAL_CONTROL_TBL varchar(100)
);
CREATE LOCAL TEMPORARY COLUMN TABLE #PAL_CONTROL_TBL LIKE PAL_CONTROL_T;
INSERT INTO #PAL_CONTROL_TBL VALUES('TYPE',1,null,null);



--RESULT TABLES
DROP TYPE PAL_SVM_MODELPART1_T;
DROP TABLE PAL_SVM_MODELPART1_TBL;
DROP TYPE PAL_SVM_MODELPART2_T;
DROP TABLE PAL_SVM_MODELPART2_TBL;

CREATE TYPE PAL_SVM_MODELPART1_T AS TABLE(
  ID varchar(50),
  VALUE double
);
CREATE COLUMN TABLE PAL_SVM_MODELPART1_TBL LIKE PAL_SVM_MODELPART1_T;

CREATE TYPE PAL_SVM_MODELPART2_T AS TABLE(
  ID integer,
  ALPHA double,
  E1_TYPE INTEGER,
  E2_TYPE INTEGER
);
CREATE COLUMN TABLE PAL_SVM_MODELPART2_TBL LIKE PAL_SVM_MODELPART2_T;


--CREATE PROCEURES
DROP TABLE PAL_SVM_PDATA_TBL;
CREATE TABLE PAL_SVM_PDATA_TBL(
  "POSITION" INT,
  "SCHEMA_NAME" VARCHAR(100),
  "TYPE_NAME" VARCHAR(100),
  "PARAMETER_TYPE" VARCHAR(100)
);
INSERT INTO PAL_SVM_PDATA_TBL VALUES (1,'DM_PAL','PAL_SVM_TRAININGSET_T','IN');
INSERT INTO PAL_SVM_PDATA_TBL VALUES (2,'DM_PAL','PAL_CONTROL_T','IN');
INSERT INTO PAL_SVM_PDATA_TBL VALUES (3,'DM_PAL','PAL_SVM_MODELPART1_T','OUT');
INSERT INTO PAL_SVM_PDATA_TBL VALUES (4,'DM_PAL','PAL_SVM_MODELPART2_T','OUT');

call SYS.AFLLANG_WRAPPER_PROCEDURE_DROP('DM_PAL','PAL_SVM_TRAIN');
call SYS.AFLLANG_WRAPPER_PROCEDURE_CREATE('AFLPAL','SVMTRAIN','DM_PAL','PAL_SVM_TRAIN',PAL_SVM_PDATA_TBL);



--TRAIN
CALL DM_PAL.PAL_SVM_TRAIN(
  PAL_SVM_TRAININGSET_TBL,
  #PAL_CONTROL_TBL,
  PAL_SVM_MODELPART1_TBL,
  PAL_SVM_MODELPART2_TBL
) WITH OVERVIEW;



--------------------------------------------------------------
--------------------------------------------------------------
--------------------------------------------------------------



--INPUT
DROP TYPE PAL_SVM_TESTINGSET_T;
DROP TABLE PAL_SVM_TESTINGSET_TBL;
CREATE TYPE PAL_SVM_TESTINGSET_T AS TABLE (
  ID integer,
  E1_TYPE INTEGER,
  E2_TYPE INTEGER
);
CREATE COLUMN TABLE PAL_SVM_TESTINGSET_TBL AS (
  SELECT ID, E1_TYPE, E2_TYPE
  FROM TEST_DATA
);


--PARAMETERS
DROP TYPE PAL_CONTROL_T;
DROP TABLE #PAL_CONTROL_TBL;
CREATE TYPE PAL_CONTROL_T AS TABLE(
  NAME varchar(50),
  INT#PAL_CONTROL_TBL integer,
  DOUBLE#PAL_CONTROL_TBL double,
  STRING#PAL_CONTROL_TBL varchar(100)
);
CREATE LOCAL TEMPORARY COLUMN TABLE #PAL_CONTROL_TBL LIKE PAL_CONTROL_T;


--RESULT
DROP TYPE PAL_SVM_MODELPART1_T;
DROP TYPE PAL_SVM_MODELPART2_T;

CREATE TYPE PAL_SVM_MODELPART1_T AS TABLE(
  ID varchar(50),
  VALUE double
);

CREATE TYPE PAL_SVM_MODELPART2_T AS TABLE(
  ID integer,
  ALPHA double,
  E1_TYPE INTEGER,
  E2_TYPE INTEGER
);


--PREDICTION
DROP TYPE PAL_SVM_PREDICTION_T;
DROP TABLE PAL_SVM_PREDICTION_TBL;

CREATE TYPE PAL_SVM_PREDICTION_T AS TABLE(
  ID integer,
  PREDICT double
);
CREATE COLUMN TABLE PAL_SVM_PREDICTION_TBL LIKE PAL_SVM_PREDICTION_T;


--SIGNATURE
DROP TABLE PAL_SVM_PDATA_TBL;
CREATE COLUMN TABLE PAL_SVM_PDATA_TBL(
  "POSITION" INT,
  "SCHEMA_NAME" VARCHAR(100),
  "TYPE_NAME" VARCHAR(100),
  "PARAMETER_TYPE" VARCHAR(100)
);
INSERT INTO PAL_SVM_PDATA_TBL VALUES (1,'DM_PAL','PAL_SVM_TESTINGSET_T','IN');
INSERT INTO PAL_SVM_PDATA_TBL VALUES (2,'DM_PAL','PAL_CONTROL_T','IN');
INSERT INTO PAL_SVM_PDATA_TBL VALUES (3,'DM_PAL','PAL_SVM_MODELPART1_T','IN');
INSERT INTO PAL_SVM_PDATA_TBL VALUES (4,'DM_PAL','PAL_SVM_MODELPART2_T','IN');
INSERT INTO PAL_SVM_PDATA_TBL VALUES (5,'DM_PAL','PAL_SVM_PREDICTION_T','OUT');

--CREATE PROCEDURES
call SYS.AFLLANG_WRAPPER_PROCEDURE_DROP('DM_PAL','PAL_SVM_PREDICT');
call SYS.AFLLANG_WRAPPER_PROCEDURE_CREATE('AFLPAL','SVMPREDICT','DM_PAL','PAL_SVM_PREDICT',PAL_SVM_PDATA_TBL);


--PREDICT
CALL DM_PAL.PAL_SVM_PREDICT(
  PAL_SVM_TESTINGSET_TBL,
  #PAL_CONTROL_TBL,
  PAL_SVM_MODELPART1_TBL,
  PAL_SVM_MODELPART2_TBL,
  PAL_SVM_PREDICTION_TBL
) WITH OVERVIEW;


--SELECT P.ID, PREDICT, T.DDI
--FROM PAL_SVM_PREDICTION_TBL P
--JOIN TEST_DATA T ON T.ID = P.ID;

SELECT COUNT(*)
FROM PAL_SVM_PREDICTION_TBL P
JOIN TEST_DATA T ON T.ID = P.ID;


SELECT COUNT(*)
FROM PAL_SVM_PREDICTION_TBL P
JOIN TEST_DATA T ON T.ID = P.ID
WHERE T.DDI = P.PREDICT;
